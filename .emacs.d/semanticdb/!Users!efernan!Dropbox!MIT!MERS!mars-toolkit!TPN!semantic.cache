;; Object TPN/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "TPN/"
  :tables
  (list
    (semanticdb-table "create-TPN.lisp"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("in-package" code nil nil [80 97])
            ("*read-tpn-type*" variable (:default-value (quote TPN-W-SELECTION)) nil [1649 1754])
            ("*read-STN-type*" variable (:default-value (quote ITC-STN)) nil [1756 1853])
            ("*read-event-type*" variable (:default-value (quote event-w-selection)) nil [1855 1970])
            ("*read-episode-type*" variable (:default-value (quote EPISODE-W-SELECTION)) nil [1972 2097])
            ("temporal-plan" type
               (:typemodifiers (":documentation")
                :members 
                  ( ("name" variable (:documentation "Name of the instance.") nil nil)
                    ("number-of-episodes" variable
                       (:documentation "The number of episodes currently 
                               associated with temporal-plan."
                        :default-value "0")
                        nil nil)
                    ("start" variable (:documentation "The start event of the instance.  All of ~
                          its episodes should be reachable ~
                          from START.") nil nil)
                    ("end" variable (:documentation "The end event of the instance.") nil nil)
                    ("events" variable
                       (:documentation "Events of the instance."
                        :default-value "(quote nil)")
                        nil nil)
                    ("event-ht" variable
                       (:documentation "Hash table of event name/object pairs."
                        :default-value "(make-hash-table :test (function equal))")
                        nil nil)
                    ("episodes" variable
                       (:documentation "Episodes of the instance, listed
                             in the order in which they were created.
                             The index of each episode corresponds to its
                             position in this list, starting with 0."
                        :default-value "(quote nil)")
                        nil nil)
                    ("last-of-episodes" variable
                       (:documentation "Last element of the list of episodes of the instance.
                                     This is used to maintain episodes in the order
                                     that they were created, so that reading and writing
                                     maintains the episode order."
                        :default-value "(quote nil)")
                        nil nil))                  
                :type "class")
                nil [4804 6424])
            ("initialize-instance" function
               (:parent "Temporal-Plan"
                :arguments ("TP" "start-name" "end-name"))
                nil [6426 6689])
            ("setup-temporal-constraint-recording!" function (:arguments ("TP")) nil [6691 6877])
            ("next-episode-index" function
               (:parent "temporal-plan"
                :arguments ("TP"))
                nil [6879 7152])
            ("nth-episode" function (:arguments ("TP")) nil [7154 7405])
            ("qualitative-state-plan" type
               (:typemodifiers (":documentation")
                :superclasses "temporal-plan"
                :type "class")
                nil [7659 7863])
            ("tp-w-histories" type
               (:typemodifiers (":documentation")
                :superclasses "temporal-plan"
                :members 
                  ( ("histories" variable
                       (:documentation "List of all histories of the temporal plan."
                        :default-value "(quote nil)")
                        nil nil))                  
                :type "class")
                nil [8076 8331])
            ("qsp-w-histories" type
               (:typemodifiers (":documentation")
                :interfaces ("tp-w-histories")
                :superclasses "qualitative-state-plan"
                :type "class")
                nil [8424 8583])
            ("tp-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :superclasses "temporal-plan"
                :members 
                  ( ("temporal-network" variable (:documentation "Network of temporal Constraints.") nil nil))                  
                :type "class")
                nil [8814 9131])
            ("setup-temporal-constraint-recording!" function (:arguments ("TP")) nil [9133 9443])
            ("qsp-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :interfaces ("tp-w-stc-reasoning")
                :superclasses "qualitative-state-plan"
                :type "class")
                nil [9446 9669])
            ("qsp-w-flow-tubes" type
               (:typemodifiers (":documentation")
                :superclasses "qsp-w-stc-reasoning"
                :type "class")
                nil [9871 10069])
            ("qsp-w-histories-and-flow-tubes" type
               (:typemodifiers (":documentation")
                :interfaces ("qsp-w-histories")
                :superclasses "qsp-w-flow-tubes"
                :type "class")
                nil [10072 10333])
            ("temporal-plan-network" type
               (:typemodifiers (":documentation")
                :superclasses "temporal-plan"
                :members 
                  ( ("name" variable nil nil nil)
                    ("start" variable nil nil nil)
                    ("end" variable nil nil nil)
                    ("events" variable nil nil nil)
                    ("event-ht" variable nil nil nil)
                    ("decisions" variable
                       (:documentation "Events that denote a set of choices."
                        :default-value "(quote nil)")
                        nil nil)
                    ("episodes" variable nil nil nil))                  
                :type "class")
                nil [10726 11266])
            ("initialize-instance" function
               (:parent "Temporal-Plan-Network"
                :arguments ("tpn" "decision-names"))
                nil [11268 11540])
            ("qualitative-state-plan-network" type
               (:typemodifiers (":documentation")
                :interfaces ("qualitative-state-plan")
                :superclasses "temporal-plan-network"
                :type "class")
                nil [11753 11911])
            ("tpn-w-histories" type
               (:typemodifiers (":documentation")
                :interfaces ("tp-w-histories")
                :superclasses "temporal-plan-network"
                :members 
                  ( ("histories" variable (:documentation "List of all histories of the temporal plan network.") nil nil))                  
                :type "class")
                nil [12119 12384])
            ("qspn-w-histories" type
               (:typemodifiers (":documentation")
                :interfaces ("tpn-w-histories" "qsp-w-histories")
                :superclasses "qualitative-state-plan-network"
                :type "class")
                nil [12387 12575])
            ("tpn-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :interfaces ("tp-w-stc-reasoning")
                :superclasses "temporal-plan-network"
                :members 
                  ( ("temporal-network" variable (:documentation "Network of temporal constraints.") nil nil))                  
                :type "class")
                nil [13030 13354])
            ("qspn-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :interfaces ("tpn-w-stc-reasoning" "qsp-w-stc-reasoning")
                :superclasses "qualitative-state-plan-network"
                :type "class")
                nil [13356 13620])
            ("tpn-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :superclasses "temporal-plan-network"
                :members 
                  ( ("activation-episode-ht" variable
                       (:documentation "Hash table of activation-assignment ~
                                          / episode list pairs, where each
                                          episode is activated by its affiliated
                                          assignment."
                        :default-value "(make-hash-table :test (function equal))")
                        nil nil)
                    ("labeled?" variable
                       (:documentation "True iff TPN activities and events have been
                             labeled with activation assignments."
                        :default-value "(quote nil)")
                        nil nil))                  
                :type "class")
                nil [13845 14682])
            ("tpn-labeled!" function
               (:parent "tpn-w-activation-labeling"
                :arguments ("tpn"))
                nil [14694 14844])
            ("tpn-unlabeled!" function
               (:parent "tpn-w-activation-labeling"
                :arguments ("tpn"))
                nil [14846 15004])
            ("qspn-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :interfaces ("tpn-w-activation-labeling")
                :superclasses "qualitative-state-plan-network"
                :type "class")
                nil [15006 15313])
            ("tpn-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("tpn-w-stc-reasoning")
                :superclasses "tpn-w-activation-labeling"
                :members 
                  ( ("selection-problem" variable
                       (:documentation "Dynamic optimal Constraint Satisfaction Problem 
                         that encodes the TPN selection problem."
                        :default-value "nil")
                        nil nil)
                    ("best-choice" variable
                       (:documentation "Is a description of a consistent assignment to choices
                    with the highest utility. description is a list of 
                    assignment descriptions:
                    (= <decision-event-number> <choice-number>)."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [15523 16231])
            ("tpn-constraint-system" function
               (:parent "tpn-w-selection"
                :arguments ("tpn"))
                nil [16438 16740])
            ("qspn-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("qspn-w-stc-reasoning" "tpn-w-selection")
                :superclasses "qspn-w-activation-labeling"
                :type "class")
                nil [16742 17014])
            ("qspn-w-flow-tubes" type
               (:typemodifiers (":documentation")
                :interfaces ("QSP-w-flow-tubes")
                :superclasses "QSPN-w-selection"
                :type "class")
                nil [17216 17432])
            ("qspn-w-histories-and-flow-tubes" type
               (:typemodifiers (":documentation")
                :interfaces ("QSPN-w-flow-tubes")
                :superclasses "QSPN-w-histories"
                :type "class")
                nil [17434 17665])
            ("qspn-w-flow-tubes-and-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("qspn-w-flow-tubes")
                :superclasses "qspn-w-selection"
                :type "class")
                nil [18141 18314])
            ("qspn-w-histories-flow-tubes-and-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("qspn-w-histories-and-flow-tubes")
                :superclasses "qspn-w-flow-tubes-and-selection"
                :type "class")
                nil [18323 18595])
            ("event" type
               (:typemodifiers (":documentation")
                :members 
                  ( ("tp" variable (:documentation "TP that event is associated with.") nil nil)
                    ("name" variable (:documentation "Name of the event.") nil nil)
                    ("decision?" variable
                       (:documentation "True iff event denotes a choice of threads."
                        :default-value "nil")
                        nil nil)
                    ("successor-episodes" variable
                       (:documentation "List of episodes that start at ~
									    this event."
                        :default-value "(quote nil)")
                        nil nil)
                    ("predecessor-episodes" variable
                       (:documentation "List of episodes that end at ~
									    this event."
                        :default-value "(quote nil)")
                        nil nil))                  
                :type "class")
                nil [19502 20231])
            ("find-tp-event" function (:arguments ("event-name" "TP")) nil [20234 20460])
            ("find-tpn-event" function (:arguments ("event-name" "TPN")) nil [20463 20693])
            ("initialize-instance" function
               (:parent "event"
                :arguments ("event"))
                nil [20697 21102])
            ("decision-event!" function
               (:parent "event"
                :arguments ("event" "tpn"))
                nil [21105 21405])
            ("event-has-predecessors?" function
               (:parent "event"
                :arguments ("event"))
                nil [21408 21613])
            ("event-has-multiple-predecessors?" function
               (:parent "event"
                :arguments ("event"))
                nil [21616 21828])
            ("two-or-more?" function (:arguments ("l")) nil [21830 21937])
            ("state-event" type
               (:typemodifiers (":documentation")
                :superclasses "event"
                :type "class")
                nil [22124 22271])
            ("event-w-history" type
               (:typemodifiers (":documentation")
                :superclasses "event"
                :type "class")
                nil [22468 22615])
            ("state-event-w-history" type
               (:typemodifiers (":documentation")
                :interfaces ("event-w-history")
                :superclasses "state-event"
                :type "class")
                nil [22618 22814])
            ("event-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :superclasses "event"
                :members 
                  ( ("itc-event" variable
                       (:documentation " The corresponding event object used by the ~
                               incremental temporal consistency (ITC) ~
                               algorithm to compute event bounds."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [23245 23696])
            ("state-event-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :interfaces ("event-w-stc-reasoning")
                :superclasses "state-event"
                :type "class")
                nil [23698 23927])
            ("event-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :superclasses "event"
                :members 
                  ( ("activation-assignment" variable
                       (:documentation "A choice assignment that activates event."
                        :default-value "nil")
                        nil nil)
                    ("activation-label" variable
                       (:documentation "A conjunction (AND) of all choice assignments that activate an event."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [24144 24670])
            ("state-event-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :interfaces ("event-w-activation-labeling")
                :superclasses "state-event"
                :type "class")
                nil [24673 24914])
            ("event-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("event-w-stc-reasoning")
                :superclasses "event-w-activation-labeling"
                :type "class")
                nil [25117 25364])
            ("state-event-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("state-event-w-stc-reasoning" "event-w-selection")
                :superclasses "state-event-w-activation-labeling"
                :type "class")
                nil [25367 25651])
            ("state-event-w-flow-tube" type
               (:typemodifiers (":documentation")
                :superclasses "state-event-w-selection"
                :type "class")
                nil [25888 26149])
            ("state-event-w-history-and-flow-tube" type
               (:typemodifiers (":documentation")
                :interfaces ("state-event-w-history")
                :superclasses "state-event-w-flow-tube"
                :type "class")
                nil [26152 26362])
            ("episode" type
               (:typemodifiers (":documentation")
                :members 
                  ( ("tp" variable (:documentation "TPN of TP that episode is associated with.") nil nil)
                    ("index" variable
                       (:documentation "Index used to refer to episode of TP."
                        :default-value "nil")
                        nil nil)
                    ("start" variable (:documentation "The event denoting the start of episode.") nil nil)
                    ("end" variable (:documentation "The event denoting the end of episode.") nil nil)
                    ("lowerbound" variable (:documentation "A lower bound on the duration of the episode.") nil nil)
                    ("upperbound" variable (:documentation " An upper bound on the duration of the episode.") nil nil)
                    ("cost" variable
                       (:documentation " Cost of executing episode."
                        :default-value "0")
                        nil nil)
                    ("description" variable (:documentation "Description of episode, ~
                                of the form (EPISODE . alist)") nil nil)
                    ("support" variable
                       (:documentation "Specifies the ting for which episode is a consequence.
                    Either an atomic symbol, or a list of the form:

                     (<reason> . <antecedents>), 

                    where antecedents collectively support the existence of episode based
                    on reason.  Defaults to :CONTROL-PROGRAM,
                    meaning that episode was specified in a control program."
                        :default-value ":control-program")
                        nil nil)
                    ("relaxable" variable
                       (:documentation "Specifies if the episode can be relaxed in case the TPN is inconsistent."
                        :default-value "nil")
                        nil nil)
                    ("isStateConstraint" variable
                       (:documentation "Specifies if the episode represents a state constraint."
                        :default-value "nil")
                        nil nil)
                    ("isTemporalConstraint" variable
                       (:documentation "Specifies if the episode represents a temporal constraint."
                        :default-value "nil")
                        nil nil)
                    ("isActivity" variable
                       (:documentation "Specifies if the episode represents an activity."
                        :default-value "nil")
                        nil nil)
                    ("isDummy" variable
                       (:documentation "Specifies if the episode represents a redundant linking episode."
                        :default-value "nil")
                        nil nil)
                    ("disabled" variable
                       (:documentation "Specifies if the episode has been disabled."
                        :default-value "nil")
                        nil nil)
                    ("executed" variable
                       (:documentation "Specifies if the episode has been executed or not."
                        :default-value "nil")
                        nil nil)
                    ("controllable" variable
                       (:documentation "Specifies if the episode is temporally controllable or not."
                        :default-value "t")
                        nil nil)
                    ("mean" variable
                       (:documentation "If the episode is uncontrollable, the temporal mean of its distribution."
                        :default-value "0")
                        nil nil)
                    ("variance" variable
                       (:documentation "If the episode is uncontrollable, the temporal variance of its distribution."
                        :default-value "*infinity*")
                        nil nil))                  
                :type "class")
                nil [27036 30313])
            ("peng" type
               (:members ("age" "height" "weight" "hotness")
                :type "struct")
                nil [30315 30365])
            ("make-peng" code nil nil [30367 30415])
            ("setf" code nil nil [30417 30453])
            ("initialize-instance" function
               (:parent "episode"
                :arguments ("episode"))
                nil [30455 30987])
            ("episode-name" function
               (:parent "episode"
                :arguments ("episode"))
                nil [30989 31311])
            ("episode-ask" function
               (:parent "episode"
                :arguments ("episode"))
                nil [31560 31707])
            ("episode-tell" function
               (:parent "episode"
                :arguments ("episode"))
                nil [31710 31860])
            ("episode-primitive" function
               (:parent "episode"
                :arguments ("episode"))
                nil [31863 32037])
            ("episode-type" function
               (:parent "episode"
                :arguments ("episode"))
                nil [32040 32204])
            ("episode-macro" function
               (:parent "episode"
                :arguments ("episode"))
                nil [32207 32369])
            ("source-is-an-episode?" function
               (:parent "essential-constraint"
                :arguments ("constraint"))
                nil [32372 32571])
            ("episode-denotes-temporal-constraint?" function
               (:parent "episode"
                :arguments ("episode"))
                nil [32574 32974])
            ("episode-w-history" type
               (:typemodifiers (":documentation")
                :superclasses "episode"
                :type "class")
                nil [33173 33318])
            ("state-episode" type
               (:typemodifiers (":documentation")
                :superclasses "episode"
                :members 
                  ( ("goal-region" variable
                       (:documentation "The state constraint (a polygon) that
                                must hold at the end eent of the episode."
                        :default-value "T")
                        nil nil))                  
                :type "class")
                nil [33518 33926])
            ("state-episode-w-history" type
               (:typemodifiers (":documentation")
                :interfaces ("episode-w-history")
                :superclasses "state-episode"
                :type "class")
                nil [33928 34108])
            ("episode-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :superclasses "episode"
                :members 
                  ( ("itc-stc" variable
                       (:documentation "An ITC simple temporal constraint, denoting ~
                            the bounds on the duration of the episode."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [34542 34918])
            ("initialize-instance" function
               (:parent "episode-w-STC-reasoning"
                :arguments ("episode"))
                nil [34920 35195])
            ("state-episode-w-stc-reasoning" type
               (:typemodifiers (":documentation")
                :interfaces ("episode-w-STC-reasoning")
                :superclasses "state-episode"
                :type "class")
                nil [35197 35427])
            ("episode-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :superclasses "episode"
                :members 
                  ( ("activation-assignment" variable
                       (:documentation "A choice assignment that activates 
                                          episode."
                        :default-value "nil")
                        nil nil)
                    ("activation-label" variable
                       (:documentation "A conjunction (AND) of all choice 
                                          assignments that activate an episode."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [35645 36260])
            ("episode-labeled?" function
               (:parent "episode-w-activation-labeling"
                :arguments ("episode"))
                nil [36262 36480])
            ("episode-activation-decision-event" function (:arguments ("episode")) nil [36482 36726])
            ("episode-activation-choice" function (:arguments ("episode")) nil [36728 36951])
            ("state-episode-w-activation-labeling" type
               (:typemodifiers (":documentation")
                :interfaces ("episode-w-activation-labeling")
                :superclasses "state-episode"
                :type "class")
                nil [36953 37196])
            ("episode-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("episode-w-stc-reasoning")
                :superclasses "episode-w-activation-labeling"
                :type "class")
                nil [37400 37632])
            ("state-episode-w-selection" type
               (:typemodifiers (":documentation")
                :interfaces ("state-episode-w-stc-reasoning" "episode-w-selection")
                :superclasses "state-episode-w-activation-labeling"
                :type "class")
                nil [37634 37909])
            ("state-episode-w-flow-tube" type
               (:typemodifiers (":documentation")
                :superclasses "state-episode-w-selection"
                :members 
                  ( ("flow-tube" variable
                       (:documentation "A flowtube object representing all possible
                              state trajectories during episode that satsify
                              episode's constraints and that of all successors."
                        :default-value "nil")
                        nil nil)
                    ("infeasible?" variable
                       (:documentation "True iff no trajectory of the physical plant
                                exists that satisfies episode, and its 
                                surrounding constraints"
                        :default-value "nil")
                        nil nil)
                    ("visited?" variable
                       (:documentation "True iff episode has been visited during
                             flow-tube compilation."
                        :default-value "nil")
                        nil nil))                  
                :type "class")
                nil [38292 39223])
            ("state-episode-w-history-and-flow-tube" type
               (:typemodifiers (":documentation")
                :interfaces ("state-episode-w-flow-tube")
                :superclasses "state-episode-w-history"
                :type "class")
                nil [39225 39440])
            ("tpn-activation-assignment-episodes" function (:arguments ("activation-assignment" "TPN")) nil [39685 39936])
            ("clear-tpn-activation-assignment-episodes!" function (:arguments ("tpn")) nil [39938 40131])
            ("flow-tube" type
               (:typemodifiers (":documentation")
                :members 
                  ( ("initial-region" variable (:documentation "All states at start that satisfy the episode, 
                        dynamic and successor constraints.") nil nil)
                    ("tightened-upperbound" variable (:documentation "An upper bound on the duration of the flow tube, 
                               based on dynamical constraints.") nil nil))                  
                :type "class")
                nil [40312 40867])
            ("history" type
               (:typemodifiers (":documentation")
                :members 
                  ( ("start" variable (:documentation "The event denoting the start of history.") nil nil)
                    ("end" variable (:documentation "The event denoting the end of history.") nil nil))                  
                :type "class")
                nil [41047 41348])
            ("print-object" function
               (:parent "event"
                :arguments ("obj" "stream"))
                nil [41629 41775])
            ("print-object" function
               (:parent "episode"
                :arguments ("self" "stream"))
                nil [41944 42398])
            ("print-details" function
               (:parent "episode"
                :arguments ("episode" "stream"))
                nil [42400 42944])
            ("print-details" function
               (:parent "episode-w-stc-reasoning"
                :arguments ("episode" "stream"))
                nil [42946 43219])
            ("print-details" function
               (:parent "episode-w-activation-labeling"
                :arguments ("episode" "stream"))
                nil [43221 43546])
            ("print-object" function
               (:parent "temporal-plan"
                :arguments ("self" "stream"))
                nil [43548 43734])
            ("print-object" function
               (:parent "temporal-plan-network"
                :arguments ("self" "stream"))
                nil [43736 43932])
            ("print-details" function
               (:parent "temporal-plan"
                :arguments ("tp" "stream"))
                nil [43934 44318])
            ("print-details" function
               (:parent "temporal-plan-network"
                :arguments ("tpn" "stream"))
                nil [44320 44829])
            ("make-tpn" function (:arguments ("tpn-name" "start-name" "end-name" "decision-names")) nil [45214 45687])
            ("get-event" function (:arguments ("tp")) nil [45714 45986])
            ("make-tp-event" function (:arguments ("tp")) nil [46050 46212])
            ("make-episode" function
               (:parent "event"
                :arguments ("start" "end" "lowerbound" "upperbound" "cost" "description" "tp" "support" "relaxable" "executed" "disabled" "isDummy" "isTemporalConstraint" "isStateConstraint" "isActivity" "controllable"))
                nil [46585 48042])
            ("add-episode" function
               (:parent "event"
                :arguments ("start" "end" "episode"))
                nil [48044 48397])
            ("make-itc-event" function
               (:parent "event"
                :arguments ("event" "tp"))
                nil [48527 48813])
            ("make-itc-simple-temporal-constraint" function
               (:parent "event"
                :arguments ("start-event" "end-event" "lowerbound" "upperbound" "tp"))
                nil [48862 49401]))          
      :file "create-TPN.lisp"
      :pointmax 51181
      :fsize 51180
      :lastmodtime '(20919 58052 0 0)
      :unmatched-syntax '((symbol 18317 . 18322) (punctuation 18316 . 18317) (symbol 18135 . 18140) (punctuation 18134 . 18135))))
  :file "!Users!efernan!Dropbox!MIT!MERS!mars-toolkit!TPN!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
